{"name":"Yoda","tagline":"Multiple repositories management","body":"# YODA | [![Pypi package](http://badge.fury.io/py/yoda.png)](http://badge.fury.io/py/yoda) [![Build Status](https://travis-ci.org/Numergy/yoda.png?branch=master)](https://travis-ci.org/Numergy/yoda) [![Coverage Status](https://coveralls.io/repos/Numergy/yoda/badge.png?branch=master)](https://coveralls.io/r/Numergy/yoda)\r\n\r\n```\r\n ::\\`--._,'.::.`._.--'/:: Multiple\r\n ::::.  ` __::__ '  .::::    repositories\r\n ::::::-:.`'..`'.:-::::::        management.\r\n ::::::::\\ `--' /:::::::: \r\n```\r\n## Requirements\r\n\r\nYoda is compatible with following python versions:\r\n- Python 2.7.x\r\n- Python 3.x\r\n\r\n### Dependencies\r\n- PyYaml\r\n- pycolorizer\r\n- PrettyTable\r\n- argcomplete\r\n\r\n### Tests packages\r\n- mock\r\n- pep8\r\n- flake8\r\n- tox\r\n- nose\r\n- coverage\r\n\r\n## Installation\r\nYoda is packaged on Pypi, so you can install it with the following command:  \r\n```bash\r\npip install yoda\r\n```\r\n\r\nto uninstall yoda:\r\n```bash\r\npip uninstall yoda\r\n```\r\n\r\nYou can also install development version:\r\n```bash\r\npip install https://github.com/Numergy/yoda/archive/master.zip\r\n```\r\n\r\n## Usage\r\n```bash\r\n$ yoda --help\r\nusage: Yoda [-h] [-d] [--version] [subcommand] ...\r\n\r\nManage your repositories easier. Each workspaces are subcommands, type `yoda\r\nworkspace_name -h` to show help.\r\n\r\npositional arguments:\r\n  [subcommand]\r\n    config      Get and set global configurations\r\n    workspace   Workspace managment\r\n    jump        Jump to directory\r\n    update      Update repositories\r\n    show        Show workspace details\r\n    status      Show repositories status\r\n\r\noptional arguments:\r\n  -h, --help    show this help message and exit\r\n  -d, --debug   show debug informations\r\n  --version     show program's version number and exit\r\n```\r\n\r\n#### yoda workspace\r\nThe `workspace` subcommand allows you to manages your yoda's workspaces.\r\nA workspace contains some properties (path, repositories list).\r\n\r\nYou can create workspace simply with a `name` and a `path`:\r\n```bash\r\nyoda workspace add ws_name /path/to/workspace\r\n```\r\n\r\nTo remove a workspace:\r\n```bash\r\nyoda workspace remove ws_name\r\n```\r\n\r\nTo print workspace list:\r\n```bash\r\nyoda workspace list\r\n```\r\n\r\n#### yoda show\r\n`show` subcommand allows you to print a workspace details. You can pass --all options to show details for all registered workspaces.\r\n```bash\r\nyoda show my_ws\r\n```\r\n\r\n#### yoda config\r\n`config` subcommand allows you to `set` and `get` yoda's configuration.\r\n```bash\r\n$ yoda config set logfile /var/log/yoda.log\r\n$ yoda config get logfile\r\n/var/log/yoda.log\r\n```\r\n\r\n#### yoda status\r\n`status` subcommand allows you to show repositories status in a workspace.\r\n\r\nFor example, to show status of all repositories in `my_ws` workspace:\r\n```bash\r\nyoda status my_ws\r\n```\r\n\r\nYou can show status for a single repository:\r\n```bash\r\nyoda status my_ws/my_repo\r\nyoda status my_repo\r\n```\r\n\r\nTo show status of all workspaces, use `--all` option:\r\n```bash\r\nyoda status --all\r\n```\r\n\r\n#### yoda update\r\n`update` subcommand is similary of `status` subcommand.\r\n\r\nTo update all repositories in `my_ws` workspace:\r\n```bash\r\nyoda update my_ws\r\n```\r\n\r\nFor a single repository:\r\n```bash\r\nyoda update my_ws/my_repo\r\n```\r\n\r\nTo update all workspaces:\r\n```bash\r\nyoda update --all\r\n```\r\n\r\n#### yoda jump\r\n`jump` subcommand allows you to spawn new shell in repository or workspace path.\r\n\r\n```bash\r\nsliim@host:~$ yoda jump my_ws/my_repo\r\nSpawn new shell on `/path/to/my_ws/my_repo/`\r\nUse Ctrl-D to exit and go back to the previous directory\r\n\r\nsliim@host:/path/to/my_ws/my_repo$\r\n```\r\n\r\n#### Workspaces subcommands\r\nEach defined workspace in yoda have subcommands, for example if you have a workspace named `my_ws` you can type:\r\n```bash\r\n$ yoda my_ws --help\r\nusage: yoda my_ws [-h] {add,remove,sync} ...\r\n\r\nManage repositories in my_ws workspace\r\n\r\npositional arguments:\r\n  {add,remove,sync}\r\n    add              Add repository to my_ws workspace\r\n    remove           Remove repository from my_ws workspace\r\n    sync             Synchronize all directories stored in workspace\r\n\r\noptional arguments:\r\n  -h, --help         show this help message and exit\r\n```\r\n\r\n## Zsh completions\r\nTo enable zsh completions, copy file `tools/zsh-completions/_yoda` in your zsh completions directory.\r\nBe sure you have enabled the zsh completions system.\r\n\r\nFor example with completions directory `~/.zsh.d/completions/`:\r\n```zsh\r\nfpath=($HOME/.zsh.d/completions $fpath)\r\nautoload -U compinit\r\ncompinit -i\r\n```\r\n\r\n## Bash completions\r\nYoda use [argcomplete](https://github.com/kislyuk/argcomplete) for bash completion.\r\n\r\nTo enable bash completions, you must execute `activate-global-python-argcomplete` command that will try to install the file\r\n`bash_completion.d/python-argcomplete.sh` into an appropriate location on your system\r\n(`/etc/bash_completion.d/` or `~/.bash_completion.d/`). If it fails, but you know the correct location of your bash completion scripts directory, you can specify it with `--dest`:\r\n```bash\r\nactivate-global-python-argcomplete --dest=/path/to/bash_completion.d\r\n```\r\n\r\nIf global completion is not activated, put this piece of code in your `.bashrc`.\r\n\r\n```bash\r\neval \"$(register-python-argcomplete yoda)\"\r\n```\r\n\r\n## Running tests\r\nYoda use [tox](http://tox.readthedocs.org), a test command line tool.  \r\nRun `tox` command in the project's root directory to run unittests, and flake8/pep8 checkers.\r\n\r\nYou can also run each tests independently:\r\n\r\nTo run unittests:\r\n`$ nosetests`\r\n\r\nTo run checkers:\r\n```bash\r\n$ pep8 ./\r\n$ flake8 ./\r\n```\r\n\r\n## License\r\nSee [COPYING](https://github.com/Numergy/yoda/blob/master/COPYING) file.\r\n\r\n## Changelog\r\nTo see what has changed in recent versions of yoda, see the [CHANGELOG](https://github.com/Numergy/yoda/blob/master/CHANGELOG.md)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}